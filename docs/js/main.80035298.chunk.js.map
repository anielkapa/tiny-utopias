{"version":3,"sources":["frank_aussen.jpg","frank_spielplatz.jpg","hoch portfolio neu.png","hyperkatoikia_aussen.jpg","hyperkatoikia_brucken.jpg","hyperkatoikia_konzept.jpg","modulus_bibliothek.jpg","modulus_explosionsaxo.jpg","modulus_innenhof.jpg","portfolio.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Portfolio","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","createImages","imageObjList","state","projects","insideStyles","background","padding","position","top","left","transform","map","element","index","react_default","a","createElement","key","className","active","dist","bgImage","img","bgImageAlt","name","blur","min","max","strength","onClick","e","toggleClass","style","alt","currentState","setState","frank_aussen","frank_spielplatz","hoch","hyperkatoikia_aussen","hyperkatoikia_brucken","hyperkatoikia_konzept","modulus_bibliothek","modulus_explosionsaxo","modulus_innenhof","nextProps","console","log","Component","App","portfolio","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qYCuFzBC,cAxEb,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAsBRQ,aAAe,WACb,IAAIC,EAAeR,EAAKS,MAAMC,SACxBC,EAAe,CACnBC,WAAY,QACZC,QAAS,GACTC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBAwBb,OAtBcT,EAAaU,IAAI,SAACC,EAAQC,GACtC,OACAC,EAAAC,EAAAC,cAAA,OAAKC,IAAKJ,EAAOK,UAAWzB,EAAKS,MAAMiB,OAAON,GAAQ,KAAO,SAC3DC,EAAAC,EAAAC,cAACI,EAAA,SAAD,CACIC,QAAST,EAAQU,IAAI,GACrBC,WAAYX,EAAQY,KACpBC,KAAM,CAAEC,KAAM,EAAGC,IAAK,GACtBC,SAAUnC,EAAKS,MAAMiB,OAAON,GAAQ,IAAM,GAC1CC,EAAAC,EAAAC,cAAA,OACIa,QAAS,SAAAC,GAAC,OAAErC,EAAKsC,YAAYlB,IAC7BK,UAAWzB,EAAKS,MAAMiB,OAAON,GAAS,yBAA0B,eAChEC,EAAAC,EAAAC,cAAA,OACIgB,MAAO5B,EACPc,UAAWzB,EAAKS,MAAMiB,OAAON,GAAS,GAAI,aACzCD,EAAQY,QAIrBV,EAAAC,EAAAC,cAAA,MAAIiB,IAAI,SAAR,SAnDYxC,EAyDlBsC,YAAa,SAAClB,GACZ,IAAMqB,EAAezC,EAAKS,MAAMiB,OAChCe,EAAarB,IAAUqB,EAAarB,GACpCpB,EAAK0C,SAAS,CAAEhB,OAAQe,KA1DxBzC,EAAKS,MAAQ,CACTC,SAAU,CACR,CAACqB,KAAM,QAASF,IAAK,CAACc,IAAcC,MACpC,CAACb,KAAM,OAAQF,IAAK,CAACgB,MACrB,CAACd,KAAM,gBAAiBF,IAAK,CAACiB,IAAqBC,IAAuBC,MAC1E,CAACjB,KAAM,UAAWF,IAAI,CAACoB,IAAoBC,IAAuBC,OAEpEzB,OAAQ,EAAC,GAAM,GAAM,GAAM,IATf1B,yFAYQoD,gDAIvBC,QAAQC,IAAI,wGA+CX,OACEjC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACZtB,KAAKI,uBAlEQgD,aCaTC,mLAnBX,OACEnC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAEhBJ,EAAAC,EAAAC,cAAA,4CAIFF,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAACkC,EAAD,gBAbMF,aCKEG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.80035298.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/frank_aussen.c5cd6db5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/frank_spielplatz.e899ee19.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hoch portfolio neu.d43aa592.png\";","module.exports = __webpack_public_path__ + \"static/media/hyperkatoikia_aussen.e757b6bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hyperkatoikia_brucken.6eb9a99b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hyperkatoikia_konzept.30001f95.jpg\";","module.exports = __webpack_public_path__ + \"static/media/modulus_bibliothek.787373b6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/modulus_explosionsaxo.341862d0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/modulus_innenhof.c49f5d92.jpg\";","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport frank_aussen from './frank_aussen.jpg';\r\nimport frank_spielplatz from './frank_spielplatz.jpg';\r\nimport hoch from \"./hoch portfolio neu.png\";\r\nimport hyperkatoikia_aussen from \"./hyperkatoikia_aussen.jpg\";\r\nimport hyperkatoikia_brucken from \"./hyperkatoikia_brucken.jpg\";\r\nimport hyperkatoikia_konzept from \"./hyperkatoikia_konzept.jpg\";\r\nimport modulus_bibliothek from \"./modulus_bibliothek.jpg\";\r\nimport modulus_explosionsaxo from \"./modulus_explosionsaxo.jpg\";\r\nimport modulus_innenhof from \"./modulus_innenhof.jpg\";\r\nimport { Parallax, Background } from 'react-parallax';\r\n\r\nclass Portfolio extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        projects: [\r\n          {name: \"frank\", img: [frank_aussen, frank_spielplatz]},\r\n          {name: \"hoch\", img: [hoch]},\r\n          {name: \"hyperkatoikia\", img: [hyperkatoikia_aussen,hyperkatoikia_brucken ,hyperkatoikia_konzept ]},\r\n          {name: \"modulus\", img:[modulus_bibliothek, modulus_explosionsaxo, modulus_innenhof]}\r\n        ],\r\n        active: [true, true, true, true]\r\n    };\r\n  }\r\n  componentWillReceiveProps(nextProps){\r\n\r\n  }\r\n  componentDidMount() {\r\n     console.log('component did mount')\r\n   }\r\n\r\n   componentWillUnmount() {\r\n\r\n   }\r\n\r\n  createImages = () =>{\r\n    let imageObjList = this.state.projects;\r\n    const insideStyles = {\r\n      background: \"white\",\r\n      padding: 20,\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      transform: \"translate(-50%,-50%)\"\r\n    };\r\n    let imgList = imageObjList.map((element,index)=>{\r\n      return(\r\n      <div key={index} className={this.state.active[index]? null : 'large'}>\r\n        <Parallax\r\n            bgImage={element.img[0]}\r\n            bgImageAlt={element.name}\r\n            blur={{ min: -1, max: 3 }}\r\n            strength={this.state.active[index]? 500 : 0}>\r\n            <div\r\n                onClick={e=>this.toggleClass(index)}\r\n                className={this.state.active[index] ? \"img_container parallax\": \"img_enlarge\"}>\r\n                <div\r\n                    style={insideStyles}\r\n                    className={this.state.active[index] ? \"\": \"unvisible\"}>\r\n                    {element.name}\r\n                </div>\r\n            </div>\r\n        </Parallax>\r\n        <h1 alt=\"space\"> </h1>\r\n      </div>\r\n    )\r\n    });\r\n    return imgList;\r\n  }\r\n  toggleClass =(index) =>{\r\n    const currentState = this.state.active;\r\n    currentState[index] = !currentState[index];\r\n    this.setState({ active: currentState });\r\n  }\r\n  render(){\r\n      return(\r\n        <div className=\"list container\">\r\n          {this.createImages()}\r\n        </div>\r\n      );\r\n    }\r\n\r\n}\r\n\r\nexport default Portfolio;\r\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport Portfolio from './portfolio.js';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <div className=\"main container\">\n          <header className=\"App-header\">\n\n            <h1>\n              Monika Pawlak die Architektin\n            </h1>\n          </header>\n          <section>\n            <Portfolio/>\n          </section>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}