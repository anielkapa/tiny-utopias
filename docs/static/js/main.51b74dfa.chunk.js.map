{"version":3,"sources":["modulus_innenhof.jpg","frank_aussen.jpg","frank_spielplatz.jpg","hyperkatoikia_aussen.jpg","hyperkatoikia_brucken.jpg","hyperkatoikia_konzept.jpg","modulus_bibliothek.jpg","modulus_explosionsaxo.jpg","hoch portfolio neu.png","portfolio.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Portfolio","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","createImages","state","projects","map","element","index","react_default","a","createElement","key","className","style","backgroundImage","img","backgroundSize","backgroundPosition","backgroundRepeat","width","height","toggleClass","currentState","active","setState","name","frank_spielplatz","frank_aussen","hyperkatoikia_brucken","hyperkatoikia_aussen","hyperkatoikia_konzept","modulus_explosionsaxo","modulus_bibliothek","modulus_innenhof","nextProps","console","log","Component","App","menu","handleClick","bind","assertThisInitialized","prevState","menuBlock","returnMenu","returnNull","id","onClick","portfolio","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,iFCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4HCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iUC+EzBC,cAjEb,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAsBRQ,aAAe,WAsBb,OArBmBP,EAAKQ,MAAMC,SACHC,IAAI,SAACC,EAAQC,GAMtC,OACMC,EAAAC,EAAAC,cAAA,OAAKC,IAAKJ,EAAOK,UAAU,kBACvBJ,EAAAC,EAAAC,cAAA,OAAKG,MAAS,CAAEC,gBAAiB,OAASR,EAAQS,IAAI,GAAK,IAC3CC,eAAgB,QAChBC,mBAAoB,gBACpBC,iBAAkB,YAClBC,MAAO,MACPC,OAAQ,cAtCpBzB,EA+ClB0B,YAAa,SAACd,GACZ,IAAMe,EAAe3B,EAAKQ,MAAMoB,OAChCD,EAAaf,IAAUe,EAAaf,GACpCZ,EAAK6B,SAAS,CAAED,OAAQD,KAhDxB3B,EAAKQ,MAAQ,CACTC,SAAU,CACR,CAACqB,KAAM,QAASV,IAAK,CAACW,IAAiBC,MACvC,CAACF,KAAM,gBAAiBV,IAAK,CAACa,IAAuBC,IAAqBC,MAC1E,CAACL,KAAM,UAAWV,IAAI,CAACgB,IAAuBC,IAAqBC,MACnE,CAACR,KAAM,OAAQV,IAAK,CAACkB,OAEvBV,OAAQ,EAAC,GAAM,GAAM,GAAM,IATf5B,yFAYQuC,gDAIvBC,QAAQC,IAAI,wGAqCX,OAGI5B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACZd,KAAKI,uBA1DMmC,aC6CTC,cApDb,SAAAA,EAAY5C,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwC,IAChB3C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0C,GAAArC,KAAAH,KAAMJ,KACDS,MAAQ,CAACoC,MAAM,GACpB5C,EAAK6C,YAAc7C,EAAK6C,YAAYC,KAAjB7C,OAAA8C,EAAA,EAAA9C,QAAA8C,EAAA,EAAA9C,CAAAD,KAHHA,6EAMhBG,KAAK0B,SAAS,SAAAmB,GAAS,MAAK,CAC1BJ,MAAOI,EAAUJ,6CAInB,OACI/B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,4DAMR,OAAOF,EAAAC,EAAAC,cAAA,6CAGP,IAAIkC,EAMJ,OAJEA,EADC9C,KAAKK,MAAMoC,KACAzC,KAAK+C,aAEL/C,KAAKgD,aAGjBtC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACZgC,GAEHpC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAChBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAASmC,GAAG,OAAOC,QAASlD,KAAK0C,aAAhD,UACAhC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAAf,gBACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAEjBJ,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAACuC,EAAD,gBA5CMZ,aCKEa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.51b74dfa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/modulus_innenhof.c49f5d92.jpg\";","module.exports = __webpack_public_path__ + \"static/media/frank_aussen.c5cd6db5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/frank_spielplatz.e899ee19.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hyperkatoikia_aussen.e757b6bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hyperkatoikia_brucken.6eb9a99b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hyperkatoikia_konzept.30001f95.jpg\";","module.exports = __webpack_public_path__ + \"static/media/modulus_bibliothek.787373b6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/modulus_explosionsaxo.341862d0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hoch portfolio neu.d43aa592.png\";","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport frank_aussen from './frank_aussen.jpg';\r\nimport frank_spielplatz from './frank_spielplatz.jpg';\r\nimport hoch from \"./hoch portfolio neu.png\";\r\nimport hyperkatoikia_aussen from \"./hyperkatoikia_aussen.jpg\";\r\nimport hyperkatoikia_brucken from \"./hyperkatoikia_brucken.jpg\";\r\nimport hyperkatoikia_konzept from \"./hyperkatoikia_konzept.jpg\";\r\nimport modulus_bibliothek from \"./modulus_bibliothek.jpg\";\r\nimport modulus_explosionsaxo from \"./modulus_explosionsaxo.jpg\";\r\nimport modulus_innenhof from \"./modulus_innenhof.jpg\";\r\n\r\nclass Portfolio extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        projects: [\r\n          {name: \"frank\", img: [frank_spielplatz,frank_aussen ]},\r\n          {name: \"hyperkatoikia\", img: [hyperkatoikia_brucken ,hyperkatoikia_aussen,hyperkatoikia_konzept ]},\r\n          {name: \"modulus\", img:[modulus_explosionsaxo, modulus_bibliothek,  modulus_innenhof]},\r\n          {name: \"hoch\", img: [modulus_innenhof]}\r\n        ],\r\n        active: [true, true, true, true]\r\n    };\r\n  }\r\n  componentWillReceiveProps(nextProps){\r\n\r\n  }\r\n  componentDidMount() {\r\n     console.log('component did mount')\r\n   }\r\n\r\n   componentWillUnmount() {\r\n\r\n   }\r\n\r\n  createImages = () =>{\r\n    let imageObjList = this.state.projects;\r\n    let imgList = imageObjList.map((element,index)=>{\r\n      let styles = {\r\n        root: {\r\n\r\n        }\r\n      };\r\n      return(\r\n            <div key={index} className=\"imageContainer\">\r\n                <div style = {{ backgroundImage: 'url(' + element.img[0] + ')',\r\n                                backgroundSize: 'cover',\r\n                                backgroundPosition: 'center center',\r\n                                backgroundRepeat: 'no-repeat',\r\n                                width: \"75%\",\r\n                                height: \"80vh\",\r\n                              }}  >\r\n\r\n                </div>\r\n            </div>\r\n    )\r\n    });\r\n    return imgList;\r\n  }\r\n  toggleClass =(index) =>{\r\n    const currentState = this.state.active;\r\n    currentState[index] = !currentState[index];\r\n    this.setState({ active: currentState });\r\n  }\r\n  render(){\r\n      return(\r\n\r\n\r\n          <div className=\"listContainer\">\r\n            {this.createImages()}\r\n          </div>\r\n\r\n      );\r\n    }\r\n\r\n}\r\n\r\nexport default Portfolio;\r\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport Portfolio from './portfolio.js';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {menu: false};\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick (){\n    this.setState(prevState => ({\n      menu: !prevState.menu\n    }));\n  }\n  returnMenu (){\n    return(\n        <div>\n          <ul>\n            <li>About</li>\n            <li>Projects</li>\n            <li>Contact</li>\n          </ul>\n        </div>\n    )\n  }\n  returnNull(){\n    return(<div></div>)\n  }\n  render() {\n    let menuBlock;\n    if(this.state.menu){\n      menuBlock = this.returnMenu();\n    }else{\n      menuBlock = this.returnNull();\n    }\n    return (\n      <div className=\"App\" >\n        <div className=\"mobileMenu\">\n          {menuBlock}\n        </div>\n        <div className=\"main container\">\n          <header className=\"App-header\">\n            <div className=\"inside\" id=\"menu\" onClick={this.handleClick}>&#9776;</div>\n            <div className=\"title\">Tiny utopias</div>\n            <div className=\"inside\"></div>\n          </header>\n          <section>\n            <Portfolio/>\n          </section>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}